services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - eslogs:/usr/share/elasticsearch/logs  
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10

  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.2
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  logstash:
    image: docker.elastic.co/logstash/logstash:7.16.2
    container_name: logstash
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/elastic_to_postgres.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash/postgresql-42.7.2.jar:/usr/share/logstash/logstash-core/lib/jars/postgresql-42.7.2.jar
    environment:
      - LS_JAVA_OPTS=-Xmx512m -Xms512m
      - xpack.monitoring.enabled=true
      - xpack.monitoring.elasticsearch.hosts=http://elasticsearch:9200
    ports:
      - "5044:5044"
      - "9600:9600"
    command: >
      bash -c "
        logstash-plugin install --no-verify logstash-output-jdbc &&
        logstash -f /usr/share/logstash/pipeline/logstash.conf
      "

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.16.2
    container_name: filebeat
    user: root
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_started
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - eslogs:/usr/share/elasticsearch/logs:ro  # read logs from Elasticsearch
    command: filebeat -e --strict.perms=false

volumes:
  esdata:
  eslogs:

networks:
  default:
    name: elasticnet

